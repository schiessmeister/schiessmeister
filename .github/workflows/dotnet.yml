name: Build

on:
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./schiessmeister-csharp

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          ref: ${{ github.event.inputs.branch }}

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup .NET 7 (for dotnet-project-licenses)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner --version 6.3.0

      - name: Begin Sonar Analysis (C#)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # The 'begin' command starts the data collection process
          dotnet sonarscanner begin \
            /k:"${{ github.event.inputs.project_key }}" \
            /o:"schiessmeister" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.branch.name="${{ github.event.inputs.branch }}" \
            /d:sonar.sourceEncoding=UTF-8 \
            /d:sonar.sources=. \
            /d:sonar.projektKey="schiessmeister-csharp"

      - name: Build
        run: dotnet build --no-restore

      - name: End Sonar Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # The 'end' command collects all data (C# from build) and sends it to SonarQube.
          dotnet sonarscanner end \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # NuGet License Check
      - name: Check NuGet package licenses
        run: |
          echo "Installing dotnet-project-licenses..."
          dotnet tool install --global dotnet-project-licenses
          export PATH="$PATH:$HOME/.dotnet/tools"
      
          echo "Generating license report..."
          dotnet-project-licenses \
            -i ./ \
            -o

      - name: Upload NuGet license report
        uses: actions/upload-artifact@v4
        with:
          name: nuget-license-report
          path: ./schiessmeister-csharp/licenses.txt

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./schiessmeister-client

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: ./schiessmeister-client/package-lock.json

      - name: Sonar Analysis Scan (Client)
        uses: SonarSource/sonarcloud-github-action@v2.4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Set the base directory relative to the repository root
          projectBaseDir: schiessmeister-client
          args: >
            -Dsonar.projectKey="schiessmeister-client"
            -Dsonar.organization="schiessmeister"
            # Explicitly set sources relative to the projectBaseDir, '.' means the projectBaseDir
            -Dsonar.sources=.
            # If you need to set the branch manually (optional, often handled by action)
            -Dsonar.branch.name="${{ github.event.inputs.branch }}"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      # npm License Check
      - name: Check npm licenses
        run: |
          echo "Checking npm package licenses..."
          npx license-checker-rseidelsohn --summary --failOn "GPL" --production

      - name: Generate license report
        run: |
          npx license-checker-rseidelsohn --json > license-report.json

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: npm-license-report
          path: ./schiessmeister-client/license-report.json
